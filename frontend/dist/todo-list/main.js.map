{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/models/task.ts","./src/app/services/api-rest-task.service.ts","./src/app/components/button/button.component.ts","./src/app/components/button/button.component.html","./src/environments/environment.ts","./src/app/components/sub-title/sub-title.component.ts","./src/app/components/sub-title/sub-title.component.html","./src/app/screens/home/home.component.ts","./src/app/screens/home/home.component.html","./src/app/components/check-box/check-box.component.ts","./src/app/components/check-box/check-box.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/index.ts","./src/app/components/task-container/task-container.component.html","./src/app/components/task-container/task-container.component.ts","./src/app/app.module.ts","./src/app/components/title/title.component.ts","./src/app/components/title/title.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  @Input() header = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<span class=\"header\">{{ header }}</span>\n","export class Task {\n  _id!: string;\n  title!: string;\n  date!: string;\n  checked: boolean = false;\n\n  constructor(title: string) {\n    this.title = title;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { GenericResponse, Task } from '../models';\n\n@Injectable({ providedIn: 'root' })\nexport class ApiRestTaskService {\n  constructor(private http: HttpClient) {}\n\n  public createTask(task: Task): Observable<GenericResponse> {\n    return this.http.post<GenericResponse>(`${environment.api}task/`, task);\n  }\n\n  public update(task: Task): Observable<GenericResponse> {\n    return this.http.put<GenericResponse>(`${environment.api}task/`, task);\n  }\n\n  public delete(task: Task): Observable<GenericResponse> {\n    return this.http.delete<GenericResponse>(\n      `${environment.api}task/${task._id}`\n    );\n  }\n\n  public getAll(): Observable<Task[]> {\n    return this.http.get<Task[]>(`${environment.api}task/`);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent implements OnInit {\n  @Input() title = '';\n\n  public click($event: any) {\n    $event.preventDefault();\n  }\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<a href=\"/#\" class=\"myButton\" (click)=\"click($event)\">{{ title }}</a>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:8080/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-sub-title',\n  templateUrl: './sub-title.component.html',\n  styleUrls: ['./sub-title.component.scss'],\n})\nexport class SubTitleComponent implements OnInit {\n  @Input() subTitle = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"sub-title\">{{ subTitle }}</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Task } from 'src/app/models';\nimport { ApiRestTaskService } from 'src/app/services/api-rest-task.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  public tasks: Task[] = [];\n\n  constructor(private apiRestTaskService: ApiRestTaskService) {}\n\n  ngOnInit(): void {\n    this.getAll();\n  }\n\n  public delete() {\n    let tasksToDelete = [];\n    tasksToDelete = this.tasks.filter((task) => task.checked);\n\n    tasksToDelete.forEach((task) => {\n      this.apiRestTaskService.delete(task).subscribe();\n    });\n\n    this.tasks = this.tasks.filter((task) => !task.checked);\n  }\n\n  public async new() {\n    const newTask = new Task('New task');\n    this.apiRestTaskService.createTask(newTask).subscribe();\n    this.tasks.push(newTask);\n  }\n\n  public getAll() {\n    this.apiRestTaskService.getAll().subscribe((data) => (this.tasks = data));\n  }\n}\n","<div class=\"header-container\">\n  <app-header header=\"Tasker\"></app-header>\n  <div class=\"button-new\">\n    <app-button title=\"New\" (click)=\"new()\"></app-button>\n  </div>\n</div>\n\n<div class=\"home\">\n  <ul class=\"no-bullets\">\n    <li *ngFor=\"let task of tasks\">\n      <app-task-container [task]=\"task\"></app-task-container>\n    </li>\n  </ul>\n</div>\n<div class=\"button-delete\">\n  <app-button title=\"Delete\" (click)=\"delete()\"></app-button>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-check-box',\n  templateUrl: './check-box.component.html',\n  styleUrls: ['./check-box.component.scss'],\n})\nexport class CheckBoxComponent implements OnInit {\n  @Input() id;\n\n  @Output() emitCheckBoxActive = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  clickOnCheckBox(value, event) {\n    const object: any = {\n      id: value,\n      flag: false,\n    };\n\n    if (event.target.checked) object.flag = true;\n\n    this.emitCheckBoxActive.emit(object);\n  }\n}\n","<input\n  type=\"checkbox\"\n  class=\"check\"\n  value=\"{{ id }}\"\n  (change)=\"clickOnCheckBox(id, $event)\"\n/>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'todo-list';\n}\n","<app-home></app-home>\n","export * from './generic-response';\nexport * from './task';\n","<div class=\"task-container\" (dblclick)=\"eventUpdate(task)\">\n  <div class=\"column-left\">\n    <app-title [title]=\"task.title\" *ngIf=\"!flagUpdate\"></app-title>\n    <input\n      autofocus\n      type=\"text\"\n      [value]=\"task.title\"\n      [(ngModel)]=\"newTitle\"\n      *ngIf=\"flagUpdate\"\n    />\n\n    <app-sub-title [subTitle]=\"task.date\"></app-sub-title>\n  </div>\n  <div class=\"column-right\">\n    <app-check-box\n      [id]=\"task._id\"\n      (emitCheckBoxActive)=\"checkTask($event)\"\n    ></app-check-box>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Task } from 'src/app/models';\n\n@Component({\n  selector: 'app-task-container',\n  templateUrl: './task-container.component.html',\n  styleUrls: ['./task-container.component.scss'],\n})\nexport class TaskContainerComponent implements OnInit {\n  @Input() task: Task;\n  public flagUpdate = false;\n  public newTitle: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  checkTask(value) {\n    this.task.checked = value.flag;\n  }\n\n  eventUpdate(task) {\n    console.log(this.newTitle);\n    if (!this.flagUpdate) {\n      this.newTitle = task.title;\n      this.flagUpdate = true;\n    } else {\n      this.task.title = this.newTitle;\n      this.flagUpdate = false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckBoxComponent } from './components/check-box/check-box.component';\nimport { SubTitleComponent } from './components/sub-title/sub-title.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HomeComponent } from './screens/home/home.component';\nimport { TaskContainerComponent } from './components/task-container/task-container.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TitleComponent,\n    ButtonComponent,\n    CheckBoxComponent,\n    SubTitleComponent,\n    HeaderComponent,\n    HomeComponent,\n    TaskContainerComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent implements OnInit {\n  @Input() title = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"title\">{{ title }}</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}